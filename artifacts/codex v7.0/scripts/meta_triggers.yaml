patterns:
  - name: "Analysis Paralysis"
    type: "sequence"
    description: "The agent appears to be stuck in a loop of observing without acting."
    tools: ["read_file", "ls", "grep"] # Read-only tools
    threshold: 5 # 5 consecutive read-only tools
    analogy_id: "environment_as_unreliable_narrator"
    message: |
      [!] Finding: You have used {count} read-only tools in a row ({tool_list}).
      - Am I gathering more information than I need?
      - Do I have enough information to form a hypothesis and take a small, concrete action?
      - What is the smallest possible change I can make to test my understanding?

  - name: "Tool Fixation"
    type: "repetition"
    description: "The agent is repeatedly trying the same tool that has recently failed."
    threshold: 3 # 3 failures of the same tool in the lookback window
    analogy_id: "tool_rejection_as_environmental_constraint"
    message: | # Default message
      [!] Finding: The tool '{tool_name}' has failed {count} times recently.
      - Have I fully understood the root cause of this tool's failure?
      - Is there an alternative tool I could use?
      - Is the environment preventing this tool from working?
    contextual_messages:
      "pytest": |
        [!] Finding: Your test suite ('pytest') appears to be failing repeatedly.
        - Have you examined the test output for the specific failing test?
        - Could a recent change have caused a regression in the code or the test itself?
      "pip install": |
        [!] Finding: Dependency installation with 'pip install' appears to be failing repeatedly.
        - Is the package name spelled correctly in your command or requirements.txt?
        - Is there a version conflict?
        - Is there a network issue preventing the download from PyPI?
      "python3": |
        [!] Finding: A python script invoked with 'python3' appears to be failing repeatedly.
        - Have you checked the script's logs or error output for tracebacks?
        - Could there be an issue with the script's arguments or the environment variables it expects?
        - Have you tried running the script with a simpler input to isolate the problem?
      "grep": |
        [!] Finding: The 'grep' command is repeatedly failing to find matches.
        - Are you certain you are searching in the correct file or directory?
        - Have you tried simplifying your search pattern or using a broader one to ensure you're not being too specific?
        - Could the text have a different encoding or line endings than you expect?
      "create_file": | # This will also catch create_file_with_block
        [!] Finding: A file creation or writing operation is failing repeatedly.
        - Have you verified that the parent directory for the file you're trying to write actually exists?
        - Is it possible there's a permissions issue preventing you from writing to the target directory?

  - name: "Dependency Missing in Test"
    type: "error_content"
    description: "A test failed because a Python module could not be imported."
    regex: "(ModuleNotFoundError|ImportError): No module named"
    analogy_id: "test_environment_as_hermetic_bubble"
    message: |
      [!] Finding: A test failed with a module import error: '{matched_text}'.
      - Did you install the necessary dependencies for the test environment?
      - Sometimes, tests run in an isolated environment. Check if your test setup requires separate dependency installation.
